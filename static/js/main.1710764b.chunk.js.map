{"version":3,"sources":["components/CreatureDetail/CreatureDetail.js","components/CreatureDetail/Abilities.js","components/CreatureDetail/Actions.js","components/CreatureDetail/Details.js","components/CreatureDetail/Stats.js","components/CreatureDetail/Vitals.js","components/CreatureDetail/index.js","context/reducers.js","context/GlobalState.js","components/CreatureCard/CreatureCard.js","components/CreatureCard/HPGauge.js","components/CreatureCard/index.js","components/CreatureSelector/CreatureSelector.js","components/CreatureSelector/index.js","components/Tableau/index.js","components/Tableau/Tableau.js","App.js","index.js"],"names":["CreatureDetail","context","useContext","AppContext","close","setDetailOpen","detail","creature","react_default","a","createElement","Modal","isOpen","toggle","ModalHeader","name","ModalBody","CreatureDetail_Vitals","CreatureDetail_Stats","CreatureDetail_Details","CreatureDetail_Abilities","CreatureDetail_Actions","Abilities","abilities","map","ability","key","description","Actions","createHitText","hit","concat","average","roll","dice","hasOwnProperty","modifier","type","createActionBlock","action","className","reach","range","short","long","targets","Array","join","effect","actions","Fragment","variants","variant","Details","skills","skill","value","damage_resistances","condition_immunities","senses","sense","languages","length","challenge","xp","Stats","stats","statBlocks","stat","push","Col","sm","xs","Card","body","toUpperCase","Math","floor","Row","noGutters","Vitals","armor","class","hit_points","current","max","speed","speeds","buildCreatureSpeed","addCreature","state","updatedList","Object","toConsumableArray","creatures","hp","arguments","undefined","reduce","total","die","ceil","random","objectSpread","JSON","parse","stringify","id","Date","now","creatureListReducer","creatureId","removedCreatureIndex","findIndex","splice","removeCreature","params","updatedCreatureIndex","param","setCreatureHP","React","createContext","GlobalState","props","_useReducer","useReducer","_useReducer2","slicedToArray","creatureList","dispatch","_useState","useState","_useState2","setDetail","creatureSrc","find","useEffect","Provider","showCreatureDetail","val","Boolean","children","components_CreatureDetail","CreatureCard","_ref","style","height","CreatureCard_HPGauge","Button","color","onClick","block","HPGauge","hpBlock","sx","sort","b","CreatureSelector","setIsOpen","_useState3","_useState4","selectedCreature","setSelectedCreature","addCreatureButton","disabled","selector","Input","onChange","e","target","Tableau","content","md","components_CreatureCard","components_CreatureSelector","App","context_GlobalState","Container","components_Tableau","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1710764b.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\nimport { Vitals, Stats, Details, Abilities, Actions } from '.'\n\nimport { AppContext } from '../../context/GlobalState'\n\nconst CreatureDetail = () => {\n  const context = useContext(AppContext)\n\n  const close = () => context.setDetailOpen(false)\n\n  if (!context.detail.creature) return null\n  return (\n    <Modal isOpen={context.detail.isOpen} toggle={close}>\n      <ModalHeader toggle={close}>{context.detail.creature.name}</ModalHeader>\n      <ModalBody>\n        <Vitals />\n        <Stats />\n        <Details />\n        <Abilities />\n        <Actions />\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default CreatureDetail\n","import React, { useContext } from 'react'\n\nimport { AppContext } from '../../context/GlobalState'\n\nconst Abilities = () => {\n  const context = useContext(AppContext)\n  const { creature } = context.detail\n\n  return (\n    <div>\n      {creature.abilities.map(ability => (\n        <p key={ability.name}>\n          <strong>{ability.name}:</strong> {ability.description}\n        </p>\n      ))}\n    </div>\n  )\n}\n\nexport default Abilities\n","import React, { useContext } from 'react'\n\nimport { AppContext } from '../../context/GlobalState'\n\nconst Actions = () => {\n  const context = useContext(AppContext)\n  const { creature } = context.detail\n\n  const createHitText = hit =>\n    `${hit.average} (${hit.roll.dice}${\n      hit.roll.hasOwnProperty('modifier')\n        ? hit.roll.modifier >= 0\n          ? ` + ${hit.roll.modifier}`\n          : ` ${hit.roll.modifier}`\n        : ''\n    }) ${hit.type}`\n\n  const createActionBlock = action => (\n    <div key={`${action.name}-${action.type}`} className=\"mb-2\">\n      <em>{action.type}:</em> {action.modifier >= 0 ? `+` : null}\n      {action.modifier} to hit,{' '}\n      {action.reach ? `reach ${action.reach} ft. ` : null}\n      {action.range\n        ? `range ${action.range.short}/${action.range.long} ft., `\n        : null}\n      {action.targets} target(s). Hit:{' '}\n      {action.hit instanceof Array\n        ? action.hit.map(hit => createHitText(hit)).join(', ')\n        : createHitText(action.hit)}\n      . {action.effect || null}\n    </div>\n  )\n\n  return (\n    <dl className=\"row mb-0\">\n      {creature.actions.map(action => (\n        <React.Fragment key={action.name}>\n          <dt className=\"col-2\">{action.name}</dt>\n          <dd className=\"col-10\">\n            {action.variants\n              ? action.variants.map(variant => createActionBlock(variant))\n              : createActionBlock(action)}\n          </dd>\n        </React.Fragment>\n      ))}\n    </dl>\n  )\n}\n\nexport default Actions\n","import React, { useContext } from 'react'\n\nimport { AppContext } from '../../context/GlobalState'\n\nconst Details = () => {\n  const context = useContext(AppContext)\n  const { creature } = context.detail\n\n  return (\n    <dl className=\"row mb-0\">\n      {creature.skills ? (\n        <React.Fragment>\n          <dt className=\"col-2\">Skills</dt>\n          <dd className=\"col-10\">\n            {creature.skills\n              .map(\n                skill =>\n                  `${skill.name} ${\n                    skill.value >= 0 ? `+${skill.value}` : skill.value\n                  }`\n              )\n              .join(', ')}\n          </dd>\n        </React.Fragment>\n      ) : null}\n      {creature.damage_resistances ? (\n        <React.Fragment>\n          <dt className=\"col-2\">Damage Resistances</dt>\n          <dd className=\"col-10\">{creature.damage_resistances.join(', ')}</dd>\n        </React.Fragment>\n      ) : null}\n      {creature.condition_immunities ? (\n        <React.Fragment>\n          <dt className=\"col-2\">Condition Immunities</dt>\n          <dd className=\"col-10\">{creature.condition_immunities.join(', ')}</dd>\n        </React.Fragment>\n      ) : null}\n      {creature.senses ? (\n        <React.Fragment>\n          <dt className=\"col-2\">Senses</dt>\n          <dd className=\"col-10\">\n            {creature.senses\n              .map(sense => `${sense.name} ${sense.value}`)\n              .join(', ')}\n          </dd>\n        </React.Fragment>\n      ) : null}\n      <dt className=\"col-2\">Languages</dt>\n      <dd className=\"col-10\">\n        {creature.languages.length ? creature.languages.join(', ') : '&mdash;'}\n      </dd>\n      <dt className=\"col-2\">Challenge</dt>\n      <dd className=\"col-10\">\n        {creature.challenge.value} ({creature.challenge.xp} XP)\n      </dd>\n    </dl>\n  )\n}\n\nexport default Details\n","import React, { useContext } from 'react'\nimport { Row, Col, Card } from 'reactstrap'\n\nimport { AppContext } from '../../context/GlobalState'\n\nconst Stats = () => {\n  const context = useContext(AppContext)\n  const { stats } = context.detail.creature\n\n  const statBlocks = []\n  for (let stat in stats) {\n    statBlocks.push(\n      <Col sm={2} xs={4} key={stat}>\n        <Card className=\"p-1 text-center\" body>\n          <div>\n            <strong>{stat.toUpperCase()}</strong>\n          </div>\n          <div>{stats[stat]}</div>\n          <div>({Math.floor((stats[stat] - 10) / 2)})</div>\n        </Card>\n      </Col>\n    )\n  }\n\n  return <Row noGutters>{statBlocks}</Row>\n}\n\nexport default Stats\n","import React, { useContext } from 'react'\n\nimport { AppContext } from '../../context/GlobalState'\n\nconst Vitals = () => {\n  const context = useContext(AppContext)\n  const { creature } = context.detail\n\n  const buildCreatureSpeed = speed => {\n    if (typeof speed === 'object') {\n      const speeds = []\n      for (let type in speed) {\n        speeds.push(\n          type === 'default'\n            ? `${speed[type]} ft.`\n            : `${type} ${speed[type]} ft.`\n        )\n      }\n      return speeds.join(', ')\n    } else {\n      return `${speed} ft.`\n    }\n  }\n\n  return (\n    <dl className=\"row mb-0\">\n      <dt className=\"col-2\">AC</dt>\n      <dd className=\"col-10\">\n        {creature.armor.class} ({creature.armor.type})\n      </dd>\n      <dt className=\"col-2\">HP</dt>\n      <dd className=\"col-10\">\n        {creature.hit_points.current} / {creature.hit_points.max}\n      </dd>\n      <dt className=\"col-2\">Speed</dt>\n      <dd className=\"col-10\">{buildCreatureSpeed(creature.speed)}</dd>\n    </dl>\n  )\n}\n\nexport default Vitals\n","import CreatureDetail from './CreatureDetail'\nimport Abilities from './Abilities'\nimport Actions from './Actions'\nimport Details from './Details'\nimport Stats from './Stats'\nimport Vitals from './Vitals'\n\nexport default CreatureDetail\nexport { Abilities, Actions, Details, Stats, Vitals }\n","export const ADD_CREATURE = 'ADD_CREATURE'\nexport const REMOVE_CREATURE = 'REMOVE_CREATURE'\nexport const SET_CREATURE_HP = 'SET_CREATURE_HP'\n\nconst roll = (dice, modifier = 0) => {\n  const val = dice.reduce((total, die) => {\n    const rand = Math.ceil(Math.random() * die)\n    return total + rand\n  }, 0)\n  const result = val + modifier\n  return result\n}\n\nconst addCreature = (creature, state) => {\n  const updatedList = [...state.creatures]\n\n  const hp = roll(\n    creature.hit_points.roll.dice,\n    creature.hit_points.roll.modifier\n  )\n\n  updatedList.push({\n    ...JSON.parse(JSON.stringify(creature)),\n    id: Date.now(),\n    hit_points: { ...creature.hit_points, current: hp, max: hp }\n  })\n\n  return { ...state, creatures: updatedList }\n}\n\nconst removeCreature = (creatureId, state) => {\n  const updatedList = [...state.creatures]\n  const removedCreatureIndex = updatedList.findIndex(\n    creature => creature.id === creatureId\n  )\n\n  updatedList.splice(removedCreatureIndex, 1)\n\n  return { ...state, creatures: updatedList }\n}\n\nconst setCreatureHP = (params, state) => {\n  const updatedList = [...state.creatures]\n  const updatedCreatureIndex = updatedList.findIndex(\n    creature => creature.id === params.creatureId\n  )\n  const updatedHP = updatedList[updatedCreatureIndex].hit_points\n\n  updatedHP[params.param] = params.value\n\n  return { ...state, creatures: updatedList }\n}\n\nconst creatureListReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_CREATURE:\n      return addCreature(action.creature, state)\n    case REMOVE_CREATURE:\n      return removeCreature(action.creatureId, state)\n    case SET_CREATURE_HP:\n      return setCreatureHP(action.params, state)\n    default:\n      return state\n  }\n}\n\nexport { creatureListReducer }\n","import React, { useState, useEffect, useReducer } from 'react'\nimport CreatureDetail from '../components/CreatureDetail'\n\nimport creatureSrc from '../static/creatures'\nimport {\n  creatureListReducer,\n  ADD_CREATURE,\n  REMOVE_CREATURE,\n  SET_CREATURE_HP\n} from './reducers'\n\nconst AppContext = React.createContext()\n\nconst GlobalState = props => {\n  const [creatureList, dispatch] = useReducer(creatureListReducer, {\n    creatures: []\n  })\n  const [detail, setDetail] = useState({\n    creature: null,\n    isOpen: false\n  })\n\n  const addCreature = name => {\n    const creature = creatureSrc.find(creature => creature.name === name)\n    if (!creature) return\n\n    dispatch({\n      type: ADD_CREATURE,\n      creature\n    })\n  }\n\n  const removeCreature = creatureId => {\n    dispatch({\n      type: REMOVE_CREATURE,\n      creatureId\n    })\n  }\n\n  const setCreatureHP = (creatureId, params) => {\n    for (let param in params) {\n      dispatch({\n        type: SET_CREATURE_HP,\n        params: {\n          creatureId,\n          param,\n          value: params[param]\n        }\n      })\n    }\n  }\n\n  const showCreatureDetail = creatureId => {\n    const creature = creatureList.creatures.find(\n      creature => creature.id === creatureId\n    )\n\n    setDetail({ creature, isOpen: true })\n  }\n\n  const setDetailOpen = val => {\n    setDetail({ ...detail, isOpen: Boolean(val) })\n  }\n\n  useEffect(() => {\n    const defaultCreatures = ['Goblin Gang Member']\n    defaultCreatures.map(creature => addCreature(creature))\n  }, [])\n\n  return (\n    <AppContext.Provider\n      value={{\n        creatures: creatureList.creatures,\n        detail,\n        addCreature,\n        removeCreature,\n        setCreatureHP,\n        showCreatureDetail,\n        setDetailOpen\n      }}\n    >\n      {props.children}\n      <CreatureDetail />\n    </AppContext.Provider>\n  )\n}\n\nexport default GlobalState\nexport { AppContext }\n","import React, { useContext } from 'react'\nimport { Card, Button } from 'reactstrap'\nimport { HPGauge } from '.'\n\nimport { AppContext } from '../../context/GlobalState'\n\nconst CreatureCard = ({ creature }) => {\n  const context = useContext(AppContext)\n\n  return (\n    <Card\n      className=\"text-center p-2 d-flex flex-direction-column justify-content-between\"\n      style={{ height: '100%' }}\n      body\n    >\n      <div className=\"creature-card-name\">\n        {creature.name || 'Unknown Creature'}\n      </div>\n      <HPGauge creature={creature} />\n      <div>\n        <Button\n          color=\"info\"\n          className=\"p-1\"\n          onClick={() => context.showCreatureDetail(creature.id)}\n          block\n        >\n          View\n        </Button>\n        <Button\n          color=\"secondary\"\n          className=\"p-1\"\n          onClick={() => context.removeCreature(creature.id)}\n          block\n        >\n          Remove\n        </Button>\n      </div>\n    </Card>\n  )\n}\n\nexport default CreatureCard\n","import React, { useContext } from 'react'\nimport { Row, Col, Button } from 'reactstrap'\n\nimport { AppContext } from '../../context/GlobalState'\n\nconst HPGauge = ({ creature }) => {\n  const context = useContext(AppContext)\n\n  let hpBlock = '0 / 0'\n  if (creature.hit_points)\n    hpBlock = (\n      <div className=\"creature-card-hp\">\n        {creature.hit_points.current || 0} / {creature.hit_points.max || 0}\n      </div>\n    )\n\n  return (\n    <React.Fragment>\n      {hpBlock}\n      <Row className=\"creature-card-hp-buttons my-2\" noGutters>\n        <Col sx={6}>\n          <Button\n            color=\"success\"\n            className=\"py-0 px-2\"\n            onClick={() =>\n              context.setCreatureHP(creature.id, {\n                current: creature.hit_points.current + 1\n              })\n            }\n          >\n            +\n          </Button>\n        </Col>\n        <Col sx={6}>\n          <Button\n            color=\"danger\"\n            className=\"py-0 px-2\"\n            onClick={() =>\n              context.setCreatureHP(creature.id, {\n                current: creature.hit_points.current - 1\n              })\n            }\n          >\n            -\n          </Button>\n        </Col>\n      </Row>\n    </React.Fragment>\n  )\n}\n\nexport default HPGauge\n","import CreatureCard from './CreatureCard'\nimport HPGauge from './HPGauge'\n\nexport default CreatureCard\nexport { HPGauge }\n","import React, { useState, useContext } from 'react'\nimport { Modal, ModalHeader, ModalBody, Button, Input } from 'reactstrap'\n\nimport { AppContext } from '../../context/GlobalState'\n\nimport creatures from '../../static/creatures'\ncreatures.sort((a, b) => {\n  if (a.name < b.name) return -1\n  if (a.name > b.name) return 1\n  return 0\n})\n\nconst CreatureSelector = props => {\n  const context = useContext(AppContext)\n\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedCreature, setSelectedCreature] = useState('')\n\n  const addSelectedCreature = () => {\n    if (!selectedCreature) return\n    context.addCreature(selectedCreature)\n    setIsOpen(false)\n    setSelectedCreature('')\n  }\n\n  const addCreatureButton = (\n    <Button\n      color=\"success\"\n      onClick={addSelectedCreature}\n      disabled={!selectedCreature}\n    >\n      Add Creature\n    </Button>\n  )\n\n  const selector = (\n    <Input\n      type=\"select\"\n      value={selectedCreature}\n      onChange={e => setSelectedCreature(e.target.value)}\n    >\n      <option value=\"\">Choose...</option>\n      {creatures.map(creature => (\n        <option key={creature.name} value={creature.name}>\n          {creature.name}\n        </option>\n      ))}\n    </Input>\n  )\n\n  return (\n    <React.Fragment>\n      <Button color=\"success\" onClick={() => setIsOpen(true)}>\n        +\n      </Button>\n      <Modal isOpen={isOpen} toggle={() => setIsOpen(false)}>\n        <ModalHeader toggle={() => setIsOpen(false)}>\n          Add New Creature\n        </ModalHeader>\n        <ModalBody>\n          {selector}\n          {addCreatureButton}\n        </ModalBody>\n      </Modal>\n    </React.Fragment>\n  )\n}\n\nexport default CreatureSelector\n","import CreatureSelector from './CreatureSelector'\n\nexport default CreatureSelector\n","import Tableau from './Tableau'\n\nexport default Tableau\n","import React, { useContext } from 'react'\nimport { Card, Row, Col } from 'reactstrap'\nimport CreatureCard from '../CreatureCard'\nimport CreatureSelector from '../CreatureSelector'\n\nimport { AppContext } from '../../context/GlobalState'\n\nconst Tableau = props => {\n  const context = useContext(AppContext)\n\n  const content = (\n    <React.Fragment>\n      {context.creatures.map(creature => (\n        <Col key={creature.id} xs={4} md={3}>\n          <CreatureCard creature={creature} />\n        </Col>\n      ))}\n    </React.Fragment>\n  )\n\n  return (\n    <Card body>\n      <Row className=\"d-flex align-items-stretch\">\n        {content}\n        <Col xs={4} md={3}>\n          <CreatureSelector />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Tableau\n","import React from 'react'\n\nimport GlobalState from './context/GlobalState'\nimport Tableau from './components/Tableau'\n\nimport { Container } from 'reactstrap'\n\nconst App = () => {\n  return (\n    <GlobalState>\n      <Container className=\"App my-3\">\n        <Tableau />\n      </Container>\n    </GlobalState>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './bootstrap.min.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}